package abstractOOP;

public class Main {
}

/*




    1. Абстрагирование –
            это способ выделить набор общих характеристик объекта, исключая из рассмотрения частные и незначимые.
            Соответственно, абстракция – это набор всех таких характеристик.

    2. абстракцию в Java реализуют абстрактные классы и интерфейсы

    this / super

    Отличия:
    1. this - указывает на текущий экз. класса
                super - указывает на текущий экз. суперкласса

    2. Через super и this можно вызывать соответствующий конструктор this("here");
       они должны находится в начале конструктора
    3. Для внутренних классов через Outer.this можно обратиться к экз. внешнешнего класса(Outer), а через
       Outer.super к родительскому классу Outer
    4. super можно использовать для вызова default метода интерфейса
       super.method();, Есть 2 НО
                       a. При возникновении неопредленности (больше 1 интерф. с один методом)
                          мы должны использавать название интерфейса Interface1.super.method();
                       b. Суперкласс доминирует над интерфейсами
       Если, это все происходит в переопределяемом классе (есть интерфес с таким же именем + переопределение),
       то мы должны расширить доступ к нему до public;


       A a = new B(); a.VariableFromA = 4; -> мы можем изменить значение переменнной в кл. A, но не B(по ссылке).
       если переменная не static уникальное значение для каждого нового экз.



*/
